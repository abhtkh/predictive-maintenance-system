"""Add email and roles to user model

Revision ID: aeba5a8becdd
Revises: 93554bb6bcee
Create Date: 2025-08-14 23:47:16.833847

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aeba5a8becdd'
down_revision: Union[str, Sequence[str], None] = '93554bb6bcee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # --- MANUAL EDIT: Define the ENUM type before using it ---
    user_role_enum = postgresql.ENUM('operator', 'engineer', 'manager', name='userrole')
    user_role_enum.create(op.get_bind())
    
    op.add_column('users', sa.Column('email', sa.String(), nullable=True))
    # --- MANUAL EDIT: Use the already-defined ENUM type ---
    op.add_column('users', sa.Column('role', user_role_enum, nullable=False))
    
    op.add_column('users', sa.Column('receives_email_alerts', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_column('users', 'receives_email_alerts')
    op.drop_column('users', 'role')
    op.drop_column('users', 'email')

    # --- MANUAL EDIT: Drop the ENUM type after the column is removed ---
    user_role_enum = postgresql.ENUM('operator', 'engineer', 'manager', name='userrole')
    user_role_enum.drop(op.get_bind())
    
    # ### end Alembic commands ###